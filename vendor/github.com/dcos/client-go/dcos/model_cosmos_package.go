/*
 * DC/OS
 *
 * DC/OS API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dcos

type CosmosPackage struct {
	Command     CosmosPackageCommand   `json:"command,omitempty"`
	Config      map[string]interface{} `json:"config,omitempty"`
	Description string                 `json:"description"`
	// List of versions that this package can downgrade to. If the property is a list containing the string '*', this package can downgrade to any version. If the property is not set or the empty list, this package cannot downgrade.
	DowngradesTo []string `json:"downgradesTo,omitempty"`
	// True if this package installs a new Mesos framework.
	Framework  bool                   `json:"framework,omitempty"`
	Licenses   []CosmosPackageLicense `json:"licenses,omitempty"`
	Maintainer string                 `json:"maintainer"`
	Marathon   CosmosPackageMarathon  `json:"marathon,omitempty"`
	// The minimum DC/OS Release Version the package can run on.
	MinDcosReleaseVersion string `json:"minDcosReleaseVersion,omitempty"`
	Name                  string `json:"name"`
	PackagingVersion      string `json:"packagingVersion"`
	// Post installation notes that would be useful to the user of this package.
	PostInstallNotes string `json:"postInstallNotes,omitempty"`
	// Post uninstallation notes that would be useful to the user of this package.
	PostUninstallNotes string `json:"postUninstallNotes,omitempty"`
	// Pre installation notes that would be useful to the user of this package.
	PreInstallNotes string `json:"preInstallNotes,omitempty"`
	// Corresponds to the revision index from the universe directory structure
	ReleaseVersion int64                 `json:"releaseVersion"`
	Resource       CosmosPackageResource `json:"resource,omitempty"`
	Scm            string                `json:"scm,omitempty"`
	// Flag indicating if the package is selected in search results
	Selected bool     `json:"selected,omitempty"`
	Tags     []string `json:"tags,omitempty"`
	// List of versions that can upgrade to this package. If the property is a list containing the string '*', any version can upgrade to this package. If the property is not set or the empty list, no version can upgrade to this package.
	UpgradesFrom []string             `json:"upgradesFrom,omitempty"`
	Version      string               `json:"version"`
	Website      string               `json:"website,omitempty"`
	Manager      CosmosPackageManager `json:"manager,omitempty"`
	// When this DC/OS package was last updated
	LastUpdated int64 `json:"lastUpdated,omitempty"`
}
