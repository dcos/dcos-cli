#!/usr/bin/env groovy

/**
 * This Jenkinsfile builds the dcos-cli into a binary on linux and executes it.
 */

/**
 * The `builder` function returns a closure that runs
 * a build on a specific node in a specific workspace.
 *
 * If no workspace is specified, the current workspace is used.
 */
def builder(String nodeId, String workspace = null) {
    return { Closure _body ->
        def body = _body

        return {
            node(nodeId) {
                if (!workspace) {
                    workspace = "${env.WORKSPACE}"
                }

                ws (workspace) {
                    stage ('Cleanup workspace') {
                        deleteDir()
                    }

                    body()
                }
            }
        }
    }
}


/**
 * Run a builder to create the dcos-cli binary and execute it.
 */
def binaryBuilder = builder('py35', '/workspace')({
    stage ('Pull dcos-cli repository') {
        dir('dcos-cli') {
            checkout scm
        }
    }

    dir('dcos-cli/python/lib/dcoscli') {
        stage ("Build dcos-cli binary") {
            sh "make binary"
            sh "dist/dcos"
        }

        stage ("Run syntax checks on dcoscli") {
            sh "make env"
            sh '''
                bash -c " \
                  source env/bin/activate && \
                  tox -e py35-syntax"
                '''
        }
    }

    stage ("Run syntax checks and unit tests on dcos") {
        dir('dcos-cli/python/lib/dcos') {
            sh "make env"
            sh '''
                bash -c " \
                    source env/bin/activate && \
                    tox -e py35-syntax && \
                    tox -e py35-unit"
                '''
        }
    }
})

binaryBuilder()
