#!/usr/bin/env groovy

// This Jenkinsfile runs integration tests for windows.

evaluate(new File("./Jenkinsfile-base"))

/**
 * These are the platforms we are building against.
 */
def platforms = ["windows"]

/**
 * These are the builds that can be run in parallel.
 */
def builders = [:]


builders['windows-tests'] = testBuilder('windows', 'windows', 'C:\\windows\\workspace')({
    stage ("Run dcos-cli tests") {
        bat '''
            bash -c " \
            rm -rf ${HOME}/.dcos && \
            sed \'/^.* dcos.snakeoil.mesosphere.com$/d\' /windows/system32/drivers/etc/hosts >/windows/system32/drivers/etc/hosts && \
            echo ${DCOS_IP} dcos.snakeoil.mesosphere.com >> /windows/system32/drivers/etc/hosts"'''

        bat 'bash -c "cat /windows/system32/drivers/etc/hosts"'

        dir('dcos-cli') {
            bat 'make test'
        }

        dir('dcos-cli/cli') {
            bat '''
                bash -c " \
                export PYTHONIOENCODING=utf-8; \
                make binary; \
                export CLI_TEST_SSH_USER=centos; \
                export CLI_TEST_MASTER_PROXY=true; \
                dist/dcos cluster setup dcos.snakeoil.mesosphere.com \
                    --insecure --username=${DCOS_ADMIN_USERNAME} \
                    --password-env=DCOS_ADMIN_PASSWORD; \
                dist/dcos config set core.reporting false; \
                dist/dcos config set core.timeout 5; \
                make test-binary"'''
        }
    }
})


/**
 * This node bootstraps everything including creating all the test clusters,
 * starting the builders, and finally destroying all the clusters once they
 * are done.
 */
throttle(['dcos-cli']) {
    node('py35') {
        stage('Cleanup workspace') {
            deleteDir()
        }

        stage ('Update node') {
            sh 'pip install requests'
        }

        stage ('Download dcos-launch') {
            sh 'wget https://downloads.dcos.io/dcos-test-utils/bin/linux/dcos-launch'
            sh 'chmod a+x dcos-launch'
        }

        stage ('Pull dcos-cli repository') {
            dir('dcos-cli') {
                checkout scm
            }
        }

        stage ('Stash dcos-cli repository') {
            stash(['includes': 'dcos-cli/**', name: 'dcos-cli'])
        }

        withCredentials(
            [[$class: 'AmazonWebServicesCredentialsBinding',
             credentialsId: '7155bd15-767d-4ae3-a375-e0d74c90a2c4',
             accessKeyVariable: 'AWS_ACCESS_KEY_ID',
             secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'],
            [$class: 'FileBinding',
             credentialsId: '23743034-1ac4-49f7-b2e6-a661aee2d11b',
             variable: 'CLI_TEST_SSH_KEY_PATH'],
            [$class: 'StringBinding',
             credentialsId: '0b513aad-e0e0-4a82-95f4-309a80a02ff9',
             variable: 'DCOS_INSTALLER_URL'],
            [$class: 'UsernamePasswordMultiBinding',
             credentialsId: '323df884-742b-4099-b8b7-d764e5eb9674',
             usernameVariable: 'DCOS_ADMIN_USERNAME',
             passwordVariable: 'DCOS_ADMIN_PASSWORD']]) {

                parallel builders
        }
    }
}
